plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.rodolfobrandao'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    google()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springAiVersion', "1.0.0-M1")
    set('springCloudVersion', "2023.0.3")
}
ext {
    springdocVersion = "2.3.0"
}

dependencies {
    // Annotations
    annotationProcessor 'org.projectlombok:lombok'

    // Compile Only
    compileOnly 'org.projectlombok:lombok'

    // Development Only
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Implementations
    implementation 'com.google.auto.value:auto-value:1.9'
    annotationProcessor 'com.google.auto.value:auto-value-annotations:1.9'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.2' // Spring Boot Thymeleaf starter
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // Spring Boot WebFlux starter
    implementation 'com.auth0:java-jwt:3.3.0' // JWT for authentication and authorization
    implementation 'com.okta.spring:okta-spring-boot-starter:3.0.7' // Okta Spring Boot starter for authentication
    implementation 'com.sun.net.httpserver:http:20070405' // HTTP server
    implementation 'io.springfox:springfox-swagger-ui:2.9.2' // Swagger UI for API documentation
    implementation 'io.springfox:springfox-swagger2:2.9.2' // Swagger 2 for API documentation
    implementation 'io.swagger.core.v3:swagger-annotations' // Swagger annotations for API documentation
    implementation 'javax.persistence:javax.persistence-api:2.2' // JPA API
    implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter' // Spring AI Ollama starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc' // Spring Boot JDBC starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Boot JPA starter
    implementation 'org.springframework.boot:spring-boot-starter-mail' // Spring Boot starter for email
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // Spring Boot OAuth2 client starter
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // Spring Boot OAuth2 resource server starter
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Boot Security starter
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Spring Boot validation starter
    implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Boot web starter
    implementation 'org.springframework.cloud:spring-cloud-starter' // Spring Cloud starter
    implementation 'org.springframework.security:spring-security-config:6.3.1' // Spring Security configuration
    implementation 'org.springframework.security:spring-security-messaging' // Spring Security messaging
    implementation 'org.springframework.session:spring-session-core' // Spring Session core

    // SpringDoc for OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-common:${springdocVersion}" // SpringDoc OpenAPI common starter
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}" // SpringDoc OpenAPI WebMVC UI starter

    // Runtime Only
    runtimeOnly 'com.h2database:h2' // H2 Database
    runtimeOnly 'org.postgresql:postgresql' // PostgreSQL driver

    // Test Implementations
    testImplementation 'io.projectreactor:reactor-test' // Reactor test support
    testImplementation 'org.assertj:assertj-core' // AssertJ for fluent assertions
    testImplementation 'org.aspectj:aspectjweaver' // AspectJ Weaver
    testImplementation 'org.junit.jupiter:junit-jupiter-api' // JUnit Jupiter API for testing
    testImplementation 'org.mockito:mockito-core:5.12.0'// Mockito core
    testImplementation 'org.mockito:mockito-inline:5.2.0'// Mockito inline mocking
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot test starter
    testImplementation 'org.springframework.boot:spring-boot-starter-web' // Spring Boot web starter for tests
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // Spring REST Docs MockMVC
    testImplementation 'org.springframework.security:spring-security-test' // Spring Security test support
    testImplementation 'org.testcontainers:junit-jupiter' // Testcontainers JUnit Jupiter support
    testImplementation 'org.testcontainers:postgresql' // Testcontainers PostgreSQL support
    testImplementation 'org.testcontainers:testcontainers' // Testcontainers core library

    // Test Runtime Only
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit Platform launcher
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
